[project]
name = "flyte"
version = "0.1.0"
description = "Documentation builder for Flyte"
requires-python = ">=3.9,<3.10" # pinning to <3.10 for now. Will update later.
dependencies = [
    # core documentation tools
    "sphinx>=7.0.0, <8.0.0",
    "furo",
    "sphinx-prompt",
    "sphinx-click",
    "sphinx-autoapi",
    "sphinx-copybutton",
    "sphinx-issues",
    "sphinx_fontawesome",
    "sphinx-design",
    "sphinx-reredirects",
    "sphinx-tabs",
    "sphinx-tags==0.2.1",
    "sphinx-docsearch",
    "pydata-sphinx-theme",
    "sphinx-code-include",
    "sphinxext-remoteliteralinclude",
    "sphinx_markdown_tables",
    "sphinxcontrib-video",
    "sphinxcontrib-mermaid",
    "sphinxcontrib-youtube",
    "readthedocs-sphinx-ext",
    # document generation and validation
    "codespell",
    "gitpython",
    "ipython!=8.7.0",
    "graphviz",
    "jupytext",
    "recommonmark",
    "myst-nb",
    # flyte core
    "flytekit>=1.12.1b2",
    "flytekitplugins-deck-standard",
    "flytekitplugins-kfpytorch",
    "flytekitplugins-sqlalchemy",
    "vaex-core>=4.17.1",
    "perian>=0.2.4",
    "neptune>=1.13.0",
    "aioboto3==12.3.0",
    "dolt-integrations>=0.1.5",
    "pandera>=0.21.0",
    "wandb>=0.18.7",
    "google-cloud-bigquery>=3.27.0",
    "pyspark>=3.5.3",
    "plotly>=5.24.1",
    "mlflow>=2.18.0",
    "typing-extensions<=4.6.3",
    "psycopg2-binary>=2.9.10",
    "pydantic>=1.10.0,<2.0.0",
]

[project.optional-dependencies]
# deps for building documentation
docs = [
    "sphinx-autobuild",     # Live reload
    "doc8",                 # Style checker
    "blacken-docs",         # Code block formatting
]

# ML deps
ml = [
    "numpy==1.23.5",        # Specific version for onnx compatibility
    "tensorflow==2.13.1",   # Required for tf2onnx
    "torch",                # PyTorch
    "scikit-learn",         # Required for skl2onnx
    "skl2onnx",            # ONNX integration
    "tf2onnx",             # TensorFlow ONNX
    "datasets",            # HuggingFace
]

# data processing and validation
data = [
    "pandas",
    "polars",
    "duckdb",
    "great-expectations",
    "pandera",
    "pydantic",
    "perian",
    "vaex-core",
    "modin",
    "dask[distributed]",
]

# DB and storage
db = [
    "psycopg2-binary",
    "sqlalchemy",
    "snowflake-connector-python",
]

# cloud and infrastructure
cloud = [
    "kubernetes",
    "python-kubernetes",
    "google-cloud-bigquery>=3.27.0",
    "aioboto3>=12.3.0",
    "databricks-cli",
    "ray==2.6.3",
]

# MLOps and experiment tracking
mlops = [
    "mlflow>=2.10.0",
    "wandb",
    "neptune",
    "openai",
    "whylogs==1.3.3",
    "whylabs-client",
]

# JuPyter and notebook support
notebook = [
    "papermill",
    "jupyter",
    "ipykernel",
]

# full installation with all dependencies
full = [
    "flyte[docs]",
    "flyte[ml]",
    "flyte[data]",
    "flyte[db]",
    "flyte[cloud]",
    "flyte[mlops]",
    "flyte[notebook]",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
    "docs/**/*.py",
    "docs/**/*.rst",
    "docs/**/*.md",
    "docs/**/*.png",
    "docs/**/*.jpg",
    "docs/**/*.svg",
    "docs/**/*.gif",
    "docs/**/*.json",
    "docs/**/*.yaml",
    "docs/**/*.toml"
]

[tool.hatch.build.targets.wheel]
packages = ["docs"]

[tool.hatch.envs.docs]
dependencies = [
    "flyte[full]",
]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -W -b html docs/ docs/_build/html"
serve = "sphinx-autobuild docs/ docs/_build/html"
lint = "doc8 docs/"
spell = "codespell docs/"

# [tool.ruff]
# select = [
#     "E",    # pycodestyle errors
#     "F",    # pyflakes
#     "B",    # flake8-bugbear
#     "I",    # isort
# ]
# ignore = ["E501"]  # line length violations

[tool.ruff.isort]
known-first-party = ["flyte", "flytekit"]

[tool.doc8]
max-line-length = 100
ignore = ["D001"]  # line too long

[tool.pyright]
include = ["docs"]
pythonVersion = "3.9"
typeCheckingMode = "basic"

[tool.codespell]
skip = "*.pyc,*.gif,*.png,*.jpg,*.svg,*.pdf"
ignore-words-list = """
    exmaple,
    wile
"""
